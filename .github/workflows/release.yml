name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "./CopilotKit/packages/**/*"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "CopilotKit"
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9.5"

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: pnpm i

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: ./.github/actions/changesets-action
        with:
          publish: pnpm publish-packages
          cwd: CopilotKit
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Put `main` back in prerelease mode
        if: ${{ github.ref == 'refs/heads/main' && steps.changesets.outputs.published }}
        run: |
            if [ ! -f ".changeset/pre.json" ]; then
              pnpm changeset pre enter next
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git config --global user.name "github-actions[bot]"
              git add .
              git commit -m "chore: entering prerelease mode (next)"
              git push origin main --force
            fi

      # - name: Get package versions
      #   id: package-versions
      #   run: |
      #     echo "::set-output name=react_core_version::$(node -p "require('./packages/react-core/package.json').version")"
      #     echo "::set-output name=react_textarea_version::$(node -p "require('./packages/react-textarea/package.json').version")"
      #     echo "::set-output name=react_ui_version::$(node -p "require('./packages/react-ui/package.json').version")"

      # - name: Create composite version
      #   id: composite-version
      #   run: |
      #     echo "::set-output name=composite-version::react-core-${{ steps.package-versions.outputs.react_core_version }}_react-textarea-${{ steps.package-versions.outputs.react_textarea_version }}_react-ui-${{ steps.package-versions.outputs.react_ui_version }}"

      # - name: Create Composite Git tag
      #   run: |
      #     git tag -f ${{ steps.composite-version.outputs.version }}

      # - name: Push Composite Git tag
      #   run: |
      #     git push origin ${{ steps.composite-version.outputs.version }}

      # - name: Create GitHub Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.composite-version.outputs.version }}
      #     release_name: Release ${{ steps.composite-version.outputs.version }}
      #     draft: false
      #     prerelease: false
